from transformers import AutoModelForCausalLM, AutoTokenizer

# Load pre-trained model and tokenizer
model_name = "gpt-3.5-turbo"  # Replace with a logical and conversational model of your choice
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForCausalLM.from_pretrained(model_name)

def get_logical_response(prompt, max_length=100):
    """
    Generates a logical response based on the input prompt.

    Args:
        prompt (str): The input text prompt.
        max_length (int): The maximum length of the generated response.

    Returns:
        str: The generated response.
    """
    # Encode the prompt
    inputs = tokenizer(prompt, return_tensors="pt")
    
    # Generate the response
    outputs = model.generate(
        inputs["input_ids"],
        max_length=max_length,
        num_return_sequences=1,
        temperature=0.7,  # Adjust for logical and coherent outputs
        top_k=50,        # Limit to the top-k tokens
        top_p=0.9,       # Use nucleus sampling for better diversity
        repetition_penalty=1.2,  # Penalize repetition for more logical responses
    )
    
    # Decode and return the response
    return tokenizer.decode(outputs[0], skip_special_tokens=True)

# Example prompt
prompt = "What is the difference between artificial intelligence and machine learning?"
response = get_logical_response(prompt)

print("Prompt:", prompt)
print("Response:", response)
